DROP TABLE IF EXISTS FILMS, FILM_GENRES, FRIENDSHIPS, LIKES, USERS, RATES_MPA, GENRES,
    DIRECTORS, REVIEWS, EVENTS;

CREATE TABLE IF NOT EXISTS RATES_MPA
(
    mpa_id   tinyint PRIMARY KEY,
    mpa_name varchar(50)
);

CREATE TABLE IF NOT EXISTS GENRES
(
    genre_id int PRIMARY KEY,
    genre    varchar(100)
);

CREATE TABLE IF NOT EXISTS USERS
(
    user_id  BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    email    varchar(100),
    login    varchar(100),
    name     varchar(100),
    birthday date
);

CREATE TABLE IF NOT EXISTS DIRECTORS
(
    director_id   bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    director_name varchar(100)
);

CREATE TABLE IF NOT EXISTS FILMS
(
    film_id     BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name        varchar(50),
    description varchar(200),
    releaseDate date,
    duration    int,
    rate_id     int REFERENCES RATES_MPA (mpa_id),
    director_id bigint REFERENCES DIRECTORS (director_id)
);
CREATE TABLE IF NOT EXISTS FILM_GENRES
(
    film_id  bigint REFERENCES FILMS (film_id),
    genre_id int REFERENCES GENRES (genre_id)
);

CREATE TABLE IF NOT EXISTS LIKES
(
    user_id bigint REFERENCES USERS (user_id),
    film_id bigint REFERENCES FILMS (film_id)
);

CREATE TABLE IF NOT EXISTS FRIENDSHIPS
(
    user_id     bigint REFERENCES USERS (user_id),
    friend_id   bigint REFERENCES USERS (user_id),
    is_approved boolean
);

CREATE TABLE IF NOT EXISTS REVIEWS
(
    review_id   bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content     varchar(500),
    is_positive boolean,
    user_id     bigint REFERENCES USERS (user_id) ON DELETE CASCADE,
    film_id     bigint REFERENCES FILMS (film_id) ON DELETE CASCADE,
    usefulness  bigint
);

CREATE TABLE EVENTS
(
    event_id   bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    timestamp  date,
    user_id    bigint REFERENCES USERS (user_id) ON DELETE CASCADE,
    event_type varchar(10),
    operation  varchar(10),
    entity_id  bigint
);